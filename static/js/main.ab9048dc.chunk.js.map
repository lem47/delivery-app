{"version":3,"sources":["Components/EditDeliveryForm/EditDeliveryForm.jsx","Components/DeliveriesList/DeliveriesList.jsx","Components/AddDeliveryForm/AddDeliveryForm.jsx","Components/Modal/ModalAddForm.jsx","Components/Spinner/Spinner.jsx","Components/Container/Container.jsx","hooks/useLocalStorage.js","App.jsx","index.jsx"],"names":["EditDeliveryForm","delivery","editDelivery","deleteDelivery","setEditable","setEditing","useState","cityFrom","setCityFrom","cityTo","setCityTo","parcelType","setParcelType","dateOfDispatch","setDateOfDispatch","parcelDescription","setParcelDescription","confirmDelete","setConfirmDelete","onSubmit","id","className","htmlFor","type","list","placeholder","defaultValue","onChange","event","target","value","pattern","autoComplete","required","min","max","disabled","aria-label","style","textAlign","role","width","onClick","defaultProps","DeliveriesList","editable","height","fontSize","AddDeliveryForm","addDelivery","ModalAddForm","data-bs-toggle","data-bs-target","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","Spinner","Container","initialValue","key","storage","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","useLocalStorage","deliveries","setDelivery","editing","editedDelivery","map","filter","newDelivery","length","App","ReactDOM","render","document","getElementById"],"mappings":"sRAGO,IAAMA,EAAmB,SAAC,GAM1B,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,YACAC,EACI,EADJA,WACI,EAC4BC,mBAASL,EAASM,UAD9C,mBACGA,EADH,KACaC,EADb,OAEwBF,mBAASL,EAASQ,QAF1C,mBAEGA,EAFH,KAEWC,EAFX,OAGgCJ,mBAASL,EAASU,YAHlD,mBAGGA,EAHH,KAGeC,EAHf,OAIwCN,mBAASL,EAASY,gBAJ1D,mBAIGA,EAJH,KAImBC,EAJnB,OAQAR,mBAASL,EAASc,mBARlB,mBAMFA,EANE,KAOFC,EAPE,OASsCV,oBAAS,GAT/C,mBASGW,EATH,KASkBC,EATlB,KAWJ,OACE,uBACEC,SAAU,WACRjB,EACED,EAASmB,GACTb,EACAE,EACAE,EACAE,EACAE,GAEFX,GAAY,GACZC,GAAW,IAXf,UAcE,sBAAKgB,UAAU,OAAf,UACE,uBACEC,QAAQ,WACRD,UAAU,aAFZ,6BAMA,uBACEE,KAAK,OACLF,UAAU,eACVD,GAAG,WACHI,KAAK,SACLC,YAAY,OACZC,aAAcnB,EACdoB,SAAU,SAACC,GACTpB,EAAYoB,EAAMC,OAAOC,QAE3BC,QAAQ,kCACRC,aAAa,MACbC,UAAQ,IAEV,2BAAUb,GAAG,SAAb,UACE,0CACA,0CACA,4CACA,6CACA,kDAIJ,sBAAKC,UAAU,OAAf,UACE,uBACEC,QAAQ,SACRD,UAAU,aAFZ,2BAMA,uBACEE,KAAK,OACLF,UAAU,eACVD,GAAG,SACHI,KAAK,SACLC,YAAY,OACZK,MAAOrB,EACPkB,SAAU,SAACC,GACTlB,EAAUkB,EAAMC,OAAOC,QAEzBC,QAAQ,kCACRC,aAAa,MACbC,UAAQ,IAEV,2BAAUb,GAAG,SAAb,UACE,0CACA,0CACA,4CACA,6CACA,kDAIJ,sBAAKC,UAAU,OAAf,UACE,uBACEC,QAAQ,iBACRD,UAAU,aAFZ,qCAMA,uBACEE,KAAK,OACLF,UAAU,eACVD,GAAG,iBACHc,IAAI,aACJC,IAAI,aACJL,MAAOjB,EACPc,SAAU,SAACC,GACTd,EAAkBc,EAAMC,OAAOC,QAEjCG,UAAQ,OAIZ,sBAAKZ,UAAU,mBAAf,UACE,uBACEA,UAAU,mBACVC,QAAQ,qBAFV,yBAMA,yBACED,UAAU,cACVD,GAAG,qBACHU,MAAOnB,EACPgB,SAAU,SAACC,GACThB,EAAcgB,EAAMC,OAAOC,QAE7BG,UAAQ,EAPV,UASE,wBAAQH,MAAM,GAAGM,UAAQ,EAAzB,uBACA,wBAAQN,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,yBAIJ,sBAAKT,UAAU,mBAAf,UACE,uBAAMA,UAAU,mBAAhB,mBAEE,uBAFF,iBAKA,0BACEA,UAAU,eACVgB,aAAW,gBACXP,MAAOf,EACPY,SAAU,SAACC,GACTZ,EAAqBY,EAAMC,OAAOC,QAEpCG,UAAQ,OAIXhB,EACC,qCACE,oBACEI,UAAU,OACViB,MAAO,CAAEC,UAAW,UAFtB,2BAMA,sBACElB,UAAU,iBACVmB,KAAK,QACLF,MAAO,CAAEG,MAAO,QAHlB,UAKE,wBACElB,KAAK,SACLF,UAAU,iBACVqB,QAAS,WACPvC,EAAeF,EAASmB,IACxBhB,GAAY,GACZC,GAAW,IANf,iBAWA,wBACEkB,KAAK,SACLF,UAAU,kBACVqB,QAAS,WACPxB,GAAiB,IAJrB,sBAYJ,qCACE,wBACEK,KAAK,SACLF,UAAU,uBACViB,MAAO,CAAEG,MAAO,QAHlB,kBAOA,wBACElB,KAAK,SACLF,UAAU,8BACViB,MAAO,CAAEG,MAAO,QAChBC,QAAS,WACPxB,GAAiB,IALrB,2BA+BVlB,EAAiB2C,aAAe,CAC9B1C,SAAU,GACVC,aAAc,aACdC,eAAgB,aAChBC,YAAa,aACbC,WAAY,cC1OP,IAAMuC,EAAiB,SAAC,GAKxB,IAJL3C,EAII,EAJJA,SACAI,EAGI,EAHJA,WACAH,EAEI,EAFJA,aACAC,EACI,EADJA,eACI,EAC4BG,oBAAS,GADrC,mBACGuC,EADH,KACazC,EADb,KAGJ,OACE,qBAAKiB,UAAU,aAAaiB,MAAO,CAAEG,MAAO,OAA5C,SACGI,EACC,qBACExB,UAAU,sCADZ,SAGE,cAAC,EAAD,CACEpB,SAAUA,EACVC,aAAcA,EACdC,eAAgBA,EAChBC,YAAaA,EACbC,WAAYA,MAIhB,mCACE,sBAAKgB,UAAU,yCAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,qBAAIA,UAAU,OAAd,mBAEE,uBAFF,UAGMpB,EAASM,SAHf,cAG6BN,EAASQ,WAEtC,wBACEc,KAAK,SACLF,UAAU,+BACViB,MAAO,CACLQ,OAAQ,GAAIC,SAAU,IAExBL,QAAS,WACPtC,GAAY,GACZC,GAAW,IARf,qBAcF,mBAAGgB,UAAU,OAAb,gCACmBpB,EAASU,cAE5B,mBAAGU,UAAU,OAAb,uCAC0BpB,EAASc,qBAEnC,uBAAOM,UAAU,aAAjB,qCACwBpB,EAASY,0BAuB7C+B,EAAeD,aAAe,CAC5B1C,SAAU,GACVI,WAAY,aACZH,aAAc,aACdC,eAAgB,cChFX,IAAM6C,EAAkB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAClB3C,mBAAS,IADS,mBAC3CC,EAD2C,KACjCC,EADiC,OAEtBF,mBAAS,IAFa,mBAE3CG,EAF2C,KAEnCC,EAFmC,OAGdJ,mBAAS,IAHK,mBAG3CK,EAH2C,KAG/BC,EAH+B,OAINN,mBAAS,IAJH,mBAI3CO,EAJ2C,KAI3BC,EAJ2B,OAKAR,mBAAS,IALT,mBAK3CS,EAL2C,KAKxBC,EALwB,KAOlD,OACE,uBACEG,SAAU,WACR8B,EACE1C,EACAE,EACAE,EACAE,EACAE,GAEFP,EAAY,IACZE,EAAU,IACVE,EAAc,IACdE,EAAkB,IAClBE,EAAqB,KAbzB,UAgBE,sBAAKK,UAAU,OAAf,UACE,uBACEC,QAAQ,WACRD,UAAU,aAFZ,6BAMA,uBACEE,KAAK,OACLF,UAAU,eACVD,GAAG,WACHI,KAAK,SACLC,YAAY,OACZC,aAAcnB,EACdoB,SAAU,SAACC,GACTpB,EAAYoB,EAAMC,OAAOC,QAE3BC,QAAQ,kCACRC,aAAa,MACbC,UAAQ,IAEV,2BAAUb,GAAG,SAAb,UACE,0CACA,0CACA,4CACA,6CACA,kDAIJ,sBAAKC,UAAU,OAAf,UACE,uBACEC,QAAQ,SACRD,UAAU,aAFZ,2BAMA,uBACEE,KAAK,OACLF,UAAU,eACVD,GAAG,SACHI,KAAK,SACLC,YAAY,OACZK,MAAOrB,EACPkB,SAAU,SAACC,GACTlB,EAAUkB,EAAMC,OAAOC,QAEzBC,QAAQ,kCACRC,aAAa,MACbC,UAAQ,IAEV,2BAAUb,GAAG,SAAb,UACE,0CACA,0CACA,4CACA,6CACA,kDAIJ,sBAAKC,UAAU,OAAf,UACE,uBACEC,QAAQ,iBACRD,UAAU,aAFZ,qCAMA,uBACEE,KAAK,OACLF,UAAU,eACVD,GAAG,iBACHc,IAAI,aACJC,IAAI,aACJR,SAAU,SAACC,GACTd,EAAkBc,EAAMC,OAAOC,QAEjCG,UAAQ,OAIZ,sBAAKZ,UAAU,mBAAf,UACE,uBACEA,UAAU,mBACVC,QAAQ,qBAFV,yBAMA,yBACED,UAAU,cACVD,GAAG,qBACHU,MAAOnB,EACPgB,SAAU,SAACC,GACThB,EAAcgB,EAAMC,OAAOC,QAE7BG,UAAQ,EAPV,UASE,wBAAQH,MAAM,GAAGM,UAAQ,EAAzB,uBACA,wBAAQN,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,yBAIJ,sBAAKT,UAAU,mBAAf,UACE,uBAAMA,UAAU,mBAAhB,mBAEE,uBAFF,iBAKA,0BACEA,UAAU,eACVgB,aAAW,gBACXP,MAAOf,EACPY,SAAU,SAACC,GACTZ,EAAqBY,EAAMC,OAAOC,QAEpCG,UAAQ,OAIZ,wBACEV,KAAK,SACLF,UAAU,+BACViB,MAAO,CAAEG,MAAO,QAHlB,uBAeNO,EAAgBL,aAAe,CAC7BM,YAAa,cCjKR,IAAMC,EAAe,SAAC,GAAD,IAAGD,EAAH,EAAGA,YAAH,OAC1B,qCACE,wBACE1B,KAAK,SACLF,UAAU,kBACV8B,iBAAe,QACfC,iBAAe,kBACfd,MAAO,CAAEG,MAAO,OALlB,8BASA,qBACEpB,UAAU,aACVD,GAAG,iBACHiC,mBAAiB,SACjBC,mBAAiB,QACjBC,SAAS,KACTC,kBAAgB,sBAChBC,cAAY,OAPd,SASE,qBAAKpC,UAAU,qCAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBACEA,UAAU,cACVD,GAAG,sBAFL,0BAMA,wBACEG,KAAK,SACLF,UAAU,YACVqC,kBAAgB,QAChBrB,aAAW,aAGf,qBAAKhB,UAAU,aAAf,SACE,cAAC,EAAD,CAAiB4B,YAAaA,iBAY1CC,EAAaP,aAAe,CAC1BM,YAAa,c,UCnDFU,EAAU,kBACrB,sBAAKtC,UAAU,oBAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,eAAf,4BCASuC,G,MAAY,WAAO,IAAD,ECL/B,SAAyBC,EAAcC,GACrC,IAD0C,EAWhBxD,oBAVT,WACf,IAAMyD,EAAUC,aAAaC,QAAQH,GAErC,OAAIC,EACKG,KAAKC,MAAMJ,GAGbF,KARiC,mBAWnC/B,EAXmC,KAW5BsC,EAX4B,KAiB1C,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAKI,KAAKK,UAAUzC,MACxC,CAACA,IAEG,CAACA,EAAOsC,GDXmBI,CAAgB,GAAI,cADzB,mBACtBC,EADsB,KACVC,EADU,OAECpE,oBAAS,GAFV,mBAEtBqE,EAFsB,KAEbtE,EAFa,KAuBvBH,EAAe,SACnBkB,EACAb,EACAE,EACAE,EACAE,EACAE,GAEA,IAAM6D,EAAiB,CACrBxD,KACAb,WACAE,SACAE,aACAE,iBACAE,qBAGF2D,EACED,EAAWI,KAAI,SAAC5E,GACd,OAAIA,EAASmB,KAAOA,EACXnB,EAGF2E,OAKPzE,EAAiB,SAACiB,GACtBsD,EACED,EAAWK,QAAO,SAAA7E,GAAQ,OAAIA,EAASmB,KAAOA,OAIlD,OACE,sBAAKC,UAAU,YAAf,WACIsD,GACA,qCACE,oBAAItD,UAAU,mBAAd,2BAGA,cAAC,EAAD,CAAc4B,YA5DF,SAClB1C,EACAE,EACAE,EACAE,EACAE,GAEA,IAAMgE,EAAc,CAClB3D,GAAIqD,EAAWO,OAAS,EACxBzE,WACAE,SACAE,aACAE,iBACAE,qBAGF2D,EAAY,CAACK,GAAF,mBAAkBN,WA+C1BA,EACCA,EAAWI,KAAI,SAAA5E,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,EACVI,WAAYA,EACZH,aAAcA,EACdC,eAAgBA,GAJXF,EAASmB,OAQlB,cAAC,EAAD,SEjFK6D,EAAM,kBACjB,sBAAK5D,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,0BAGA,cAAC,EAAD,QCJJ6D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ab9048dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const EditDeliveryForm = ({\n  delivery,\n  editDelivery,\n  deleteDelivery,\n  setEditable,\n  setEditing,\n}) => {\n  const [cityFrom, setCityFrom] = useState(delivery.cityFrom);\n  const [cityTo, setCityTo] = useState(delivery.cityTo);\n  const [parcelType, setParcelType] = useState(delivery.parcelType);\n  const [dateOfDispatch, setDateOfDispatch] = useState(delivery.dateOfDispatch);\n  const [\n    parcelDescription,\n    setParcelDescription,\n  ] = useState(delivery.parcelDescription);\n  const [confirmDelete, setConfirmDelete] = useState(false);\n\n  return (\n    <form\n      onSubmit={() => {\n        editDelivery(\n          delivery.id,\n          cityFrom,\n          cityTo,\n          parcelType,\n          dateOfDispatch,\n          parcelDescription,\n        );\n        setEditable(false);\n        setEditing(false);\n      }}\n    >\n      <div className=\"mb-3\">\n        <label\n          htmlFor=\"cityFrom\"\n          className=\"form-label\"\n        >\n          Deliver from...\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"cityFrom\"\n          list=\"cities\"\n          placeholder=\"City\"\n          defaultValue={cityFrom}\n          onChange={(event) => {\n            setCityFrom(event.target.value);\n          }}\n          pattern=\"Kyiv|Lviv|Odessa|Kharkiv|Dnipro\"\n          autoComplete=\"off\"\n          required\n        />\n        <datalist id=\"cities\">\n          <option>Kyiv</option>\n          <option>Lviv</option>\n          <option>Odessa</option>\n          <option>Kharkiv</option>\n          <option>Dnipro</option>\n        </datalist>\n      </div>\n\n      <div className=\"mb-3\">\n        <label\n          htmlFor=\"cityTo\"\n          className=\"form-label\"\n        >\n          Deliver to...\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"cityTo\"\n          list=\"cities\"\n          placeholder=\"City\"\n          value={cityTo}\n          onChange={(event) => {\n            setCityTo(event.target.value);\n          }}\n          pattern=\"Kyiv|Lviv|Odessa|Kharkiv|Dnipro\"\n          autoComplete=\"off\"\n          required\n        />\n        <datalist id=\"cities\">\n          <option>Kyiv</option>\n          <option>Lviv</option>\n          <option>Odessa</option>\n          <option>Kharkiv</option>\n          <option>Dnipro</option>\n        </datalist>\n      </div>\n\n      <div className=\"mb-4\">\n        <label\n          htmlFor=\"dateOfDispatch\"\n          className=\"form-label\"\n        >\n          Choose date of dispatch\n        </label>\n        <input\n          type=\"date\"\n          className=\"form-control\"\n          id=\"dateOfDispatch\"\n          min=\"2022-08-01\"\n          max=\"2022-12-31\"\n          value={dateOfDispatch}\n          onChange={(event) => {\n            setDateOfDispatch(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"input-group mb-4\">\n        <label\n          className=\"input-group-text\"\n          htmlFor=\"inputGroupSelect01\"\n        >\n          Parcel type\n        </label>\n        <select\n          className=\"form-select\"\n          id=\"inputGroupSelect01\"\n          value={parcelType}\n          onChange={(event) => {\n            setParcelType(event.target.value);\n          }}\n          required\n        >\n          <option value=\"\" disabled>Choose...</option>\n          <option value=\"Gadgets\">Gadgets</option>\n          <option value=\"Drinks\">Drinks</option>\n          <option value=\"Clothes\">Clothes</option>\n          <option value=\"Medicines\">Medicines</option>\n          <option value=\"Other\">Other</option>\n        </select>\n      </div>\n\n      <div className=\"input-group mb-4\">\n        <span className=\"input-group-text\">\n          Parcel\n          <br />\n          description\n        </span>\n        <textarea\n          className=\"form-control\"\n          aria-label=\"With textarea\"\n          value={parcelDescription}\n          onChange={(event) => {\n            setParcelDescription(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      {confirmDelete ? (\n        <>\n          <h5\n            className=\"mb-3\"\n            style={{ textAlign: 'center' }}\n          >\n            ARE YOU SURE?\n          </h5>\n          <div\n            className=\"btn-group mb-2\"\n            role=\"group\"\n            style={{ width: '100%' }}\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={() => {\n                deleteDelivery(delivery.id);\n                setEditable(false);\n                setEditing(false);\n              }}\n            >\n              YES\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={() => {\n                setConfirmDelete(false);\n              }}\n            >\n              NO\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mb-3\"\n            style={{ width: '100%' }}\n          >\n            SAVE\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-danger mb-2\"\n            style={{ width: '100%' }}\n            onClick={() => {\n              setConfirmDelete(true);\n            }}\n          >\n            DELETE\n          </button>\n        </>\n      )}\n    </form>\n  );\n};\n\nEditDeliveryForm.propTypes = {\n  delivery: PropTypes.shape({\n    id: PropTypes.number,\n    cityFrom: PropTypes.string,\n    cityTo: PropTypes.string,\n    parcelType: PropTypes.string,\n    dateOfDispatch: PropTypes.string,\n    parcelDescription: PropTypes.string,\n  }),\n  editDelivery: PropTypes.func,\n  deleteDelivery: PropTypes.func,\n  setEditable: PropTypes.func,\n  setEditing: PropTypes.func,\n};\n\nEditDeliveryForm.defaultProps = {\n  delivery: {},\n  editDelivery: () => {},\n  deleteDelivery: () => {},\n  setEditable: () => {},\n  setEditing: () => {},\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { EditDeliveryForm } from '../EditDeliveryForm/EditDeliveryForm';\n\nexport const DeliveriesList = ({\n  delivery,\n  setEditing,\n  editDelivery,\n  deleteDelivery,\n}) => {\n  const [editable, setEditable] = useState(false);\n\n  return (\n    <div className=\"list-group\" style={{ width: '80%' }}>\n      {editable ? (\n        <div\n          className=\"list-group-item border-warning mt-4\"\n        >\n          <EditDeliveryForm\n            delivery={delivery}\n            editDelivery={editDelivery}\n            deleteDelivery={deleteDelivery}\n            setEditable={setEditable}\n            setEditing={setEditing}\n          />\n        </div>\n      ) : (\n        <>\n          <div className=\"list-group-item list-group-item-action\">\n            <div className=\"d-flex w-100 justify-content-between\">\n              <h5 className=\"mb-3\">\n                ROUTE:\n                <br />\n                {`${delivery.cityFrom} - ${delivery.cityTo}`}\n              </h5>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-warning mt-2\"\n                style={{\n                  height: 35, fontSize: 15,\n                }}\n                onClick={() => {\n                  setEditable(true);\n                  setEditing(true);\n                }}\n              >\n                EDIT\n              </button>\n            </div>\n            <p className=\"mb-1\">\n              {`PARCEL TYPE: ${delivery.parcelType}`}\n            </p>\n            <p className=\"mb-2\">\n              {`PARCEL DESCRIPTION: ${delivery.parcelDescription}`}\n            </p>\n            <small className=\"text-muted\">\n              {`DATE OF DISPATCH: ${delivery.dateOfDispatch}`}\n            </small>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nDeliveriesList.propTypes = {\n  delivery: PropTypes.shape({\n    id: PropTypes.number,\n    cityFrom: PropTypes.string,\n    cityTo: PropTypes.string,\n    parcelType: PropTypes.string,\n    dateOfDispatch: PropTypes.string,\n    parcelDescription: PropTypes.string,\n  }),\n  setEditing: PropTypes.func,\n  editDelivery: PropTypes.func,\n  deleteDelivery: PropTypes.func,\n};\n\nDeliveriesList.defaultProps = {\n  delivery: {},\n  setEditing: () => {},\n  editDelivery: () => {},\n  deleteDelivery: () => {},\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddDeliveryForm = ({ addDelivery }) => {\n  const [cityFrom, setCityFrom] = useState('');\n  const [cityTo, setCityTo] = useState('');\n  const [parcelType, setParcelType] = useState('');\n  const [dateOfDispatch, setDateOfDispatch] = useState('');\n  const [parcelDescription, setParcelDescription] = useState('');\n\n  return (\n    <form\n      onSubmit={() => {\n        addDelivery(\n          cityFrom,\n          cityTo,\n          parcelType,\n          dateOfDispatch,\n          parcelDescription,\n        );\n        setCityFrom('');\n        setCityTo('');\n        setParcelType('');\n        setDateOfDispatch('');\n        setParcelDescription('');\n      }}\n    >\n      <div className=\"mb-3\">\n        <label\n          htmlFor=\"cityFrom\"\n          className=\"form-label\"\n        >\n          Deliver from...\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"cityFrom\"\n          list=\"cities\"\n          placeholder=\"City\"\n          defaultValue={cityFrom}\n          onChange={(event) => {\n            setCityFrom(event.target.value);\n          }}\n          pattern=\"Kyiv|Lviv|Odessa|Kharkiv|Dnipro\"\n          autoComplete=\"off\"\n          required\n        />\n        <datalist id=\"cities\">\n          <option>Kyiv</option>\n          <option>Lviv</option>\n          <option>Odessa</option>\n          <option>Kharkiv</option>\n          <option>Dnipro</option>\n        </datalist>\n      </div>\n\n      <div className=\"mb-3\">\n        <label\n          htmlFor=\"cityTo\"\n          className=\"form-label\"\n        >\n          Deliver to...\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"cityTo\"\n          list=\"cities\"\n          placeholder=\"City\"\n          value={cityTo}\n          onChange={(event) => {\n            setCityTo(event.target.value);\n          }}\n          pattern=\"Kyiv|Lviv|Odessa|Kharkiv|Dnipro\"\n          autoComplete=\"off\"\n          required\n        />\n        <datalist id=\"cities\">\n          <option>Kyiv</option>\n          <option>Lviv</option>\n          <option>Odessa</option>\n          <option>Kharkiv</option>\n          <option>Dnipro</option>\n        </datalist>\n      </div>\n\n      <div className=\"mb-4\">\n        <label\n          htmlFor=\"dateOfDispatch\"\n          className=\"form-label\"\n        >\n          Choose date of dispatch\n        </label>\n        <input\n          type=\"date\"\n          className=\"form-control\"\n          id=\"dateOfDispatch\"\n          min=\"2022-08-01\"\n          max=\"2022-12-31\"\n          onChange={(event) => {\n            setDateOfDispatch(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"input-group mb-4\">\n        <label\n          className=\"input-group-text\"\n          htmlFor=\"inputGroupSelect01\"\n        >\n          Parcel type\n        </label>\n        <select\n          className=\"form-select\"\n          id=\"inputGroupSelect01\"\n          value={parcelType}\n          onChange={(event) => {\n            setParcelType(event.target.value);\n          }}\n          required\n        >\n          <option value=\"\" disabled>Choose...</option>\n          <option value=\"Gadgets\">Gadgets</option>\n          <option value=\"Drinks\">Drinks</option>\n          <option value=\"Clothes\">Clothes</option>\n          <option value=\"Medicines\">Medicines</option>\n          <option value=\"Other\">Other</option>\n        </select>\n      </div>\n\n      <div className=\"input-group mb-4\">\n        <span className=\"input-group-text\">\n          Parcel\n          <br />\n          description\n        </span>\n        <textarea\n          className=\"form-control\"\n          aria-label=\"With textarea\"\n          value={parcelDescription}\n          onChange={(event) => {\n            setParcelDescription(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-outline-success mb-2\"\n        style={{ width: '100%' }}\n      >\n        APPLY\n      </button>\n    </form>\n  );\n};\n\nAddDeliveryForm.propTypes = {\n  addDelivery: PropTypes.func,\n};\n\nAddDeliveryForm.defaultProps = {\n  addDelivery: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AddDeliveryForm } from '../AddDeliveryForm/AddDeliveryForm';\n\nexport const ModalAddForm = ({ addDelivery }) => (\n  <>\n    <button\n      type=\"button\"\n      className=\"btn btn-success\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#staticBackdrop\"\n      style={{ width: '80%' }}\n    >\n      ADD NEW DELIVERY\n    </button>\n    <div\n      className=\"modal fade\"\n      id=\"staticBackdrop\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabIndex=\"-1\"\n      aria-labelledby=\"staticBackdropLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5\n              className=\"modal-title\"\n              id=\"staticBackdropLabel\"\n            >\n              New delivery\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            />\n          </div>\n          <div className=\"modal-body\">\n            <AddDeliveryForm addDelivery={addDelivery} />\n          </div>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nModalAddForm.propTypes = {\n  addDelivery: PropTypes.func,\n};\n\nModalAddForm.defaultProps = {\n  addDelivery: () => {},\n};\n","import React from 'react';\nimport './Spinner.scss';\n\nexport const Spinner = () => (\n  <div className=\"loading-container\">\n    <div className=\"spinner\" />\n    <div className=\"spinner-center\" />\n    <div className=\"loading-text\">Loading...</div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { DeliveriesList } from '../DeliveriesList/DeliveriesList';\nimport { ModalAddForm } from '../Modal/ModalAddForm';\nimport { Spinner } from '../Spinner/Spinner';\nimport './Container.scss';\n\nexport const Container = () => {\n  const [deliveries, setDelivery] = useLocalStorage([], 'deliveries');\n  const [editing, setEditing] = useState(false);\n\n  const addDelivery = (\n    cityFrom,\n    cityTo,\n    parcelType,\n    dateOfDispatch,\n    parcelDescription,\n  ) => {\n    const newDelivery = {\n      id: deliveries.length + 1,\n      cityFrom,\n      cityTo,\n      parcelType,\n      dateOfDispatch,\n      parcelDescription,\n    };\n\n    setDelivery([newDelivery, ...deliveries]);\n  };\n\n  const editDelivery = (\n    id,\n    cityFrom,\n    cityTo,\n    parcelType,\n    dateOfDispatch,\n    parcelDescription,\n  ) => {\n    const editedDelivery = {\n      id,\n      cityFrom,\n      cityTo,\n      parcelType,\n      dateOfDispatch,\n      parcelDescription,\n    };\n\n    setDelivery(\n      deliveries.map((delivery) => {\n        if (delivery.id !== id) {\n          return delivery;\n        }\n\n        return editedDelivery;\n      }),\n    );\n  };\n\n  const deleteDelivery = (id) => {\n    setDelivery(\n      deliveries.filter(delivery => delivery.id !== id),\n    );\n  };\n\n  return (\n    <div className=\"Container\">\n      {!editing && (\n        <>\n          <h2 className=\"Container__title\">\n            My deliveries\n          </h2>\n          <ModalAddForm addDelivery={addDelivery} />\n        </>\n      )}\n      {deliveries ? (\n        deliveries.map(delivery => (\n          <DeliveriesList\n            key={delivery.id}\n            delivery={delivery}\n            setEditing={setEditing}\n            editDelivery={editDelivery}\n            deleteDelivery={deleteDelivery}\n          />\n        ))\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nfunction useLocalStorage(initialValue, key) {\n  const getValue = () => {\n    const storage = localStorage.getItem(key);\n\n    if (storage) {\n      return JSON.parse(storage);\n    }\n\n    return initialValue;\n  };\n\n  const [value, setValue] = useState(getValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value]);\n\n  return [value, setValue];\n}\n\nexport { useLocalStorage };\n","import React from 'react';\nimport './App.scss';\nimport { Container } from './Components/Container/Container';\n\nexport const App = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">\n      Delivery App\n    </h1>\n    <Container />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}