{"version":3,"sources":["Components/DeliveriesList/DeliveriesList.jsx","Components/AddDeliveryForm/AddDeliveryForm.jsx","Components/Modal/ModalAddForm.jsx","Components/Spinner/Spinner.jsx","Components/Container/Container.jsx","hooks/useLocalStorage.js","App.jsx","index.jsx"],"names":["DeliveriesList","delivery","className","style","width","cityFrom","cityTo","parcelType","parcelDescription","dateOfDispatch","defaultProps","AddDeliveryForm","addDelivery","useState","setCityFrom","setCityTo","setParcelType","setDateOfDispatch","setParcelDescription","onSubmit","htmlFor","type","id","placeholder","defaultValue","onChange","event","target","value","required","min","max","disabled","aria-label","ModalAddForm","data-bs-toggle","data-bs-target","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","Spinner","Container","initialValue","key","storage","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","useLocalStorage","deliveries","setDelivery","newDelivery","length","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc6b9481.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const DeliveriesList = ({ delivery }) => (\n  <div className=\"list-group\" style={{ width: '80%' }}>\n    <div className=\"list-group-item list-group-item-action\">\n      <div className=\"d-flex w-100 justify-content-between\">\n        <h5 className=\"mb-3\">\n          {`ROUTE: ${delivery.cityFrom} - ${delivery.cityTo}`}\n        </h5>\n        <small className=\"text-muted\">\n          EDIT\n        </small>\n      </div>\n      <p className=\"mb-2\">\n        {`PARCEL TYPE: ${delivery.parcelType}`}\n      </p>\n      <p className=\"mb-\">\n        {`PARCEL DESCRIPTION: ${delivery.parcelDescription}`}\n      </p>\n      <small className=\"text-muted\">\n        {`DATE OF DISPATCH: ${delivery.dateOfDispatch}`}\n      </small>\n    </div>\n  </div>\n);\n\nDeliveriesList.propTypes = {\n  delivery: PropTypes.shape({\n    id: PropTypes.number,\n    cityFrom: PropTypes.string,\n    cityTo: PropTypes.string,\n    parcelType: PropTypes.string,\n    dateOfDispatch: PropTypes.string,\n    parcelDescription: PropTypes.string,\n  }),\n};\n\nDeliveriesList.defaultProps = {\n  delivery: {},\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddDeliveryForm = ({ addDelivery }) => {\n  const [cityFrom, setCityFrom] = useState('');\n  const [cityTo, setCityTo] = useState('');\n  const [parcelType, setParcelType] = useState('');\n  const [dateOfDispatch, setDateOfDispatch] = useState('');\n  const [parcelDescription, setParcelDescription] = useState('');\n\n  return (\n    <form\n      onSubmit={() => {\n        addDelivery(\n          cityFrom,\n          cityTo,\n          parcelType,\n          dateOfDispatch,\n          parcelDescription,\n        );\n        setCityFrom('');\n        setCityTo('');\n        setParcelType('');\n        setDateOfDispatch('');\n        setParcelDescription('');\n      }}\n    >\n      <div className=\"mb-3\">\n        <label\n          htmlFor=\"cityFrom\"\n          className=\"form-label\"\n        >\n          Deliver from...\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"cityFrom\"\n          placeholder=\"City\"\n          defaultValue={cityFrom}\n          onChange={(event) => {\n            setCityFrom(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label\n          htmlFor=\"cityTo\"\n          className=\"form-label\"\n        >\n          Deliver to...\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"cityTo\"\n          placeholder=\"City\"\n          value={cityTo}\n          onChange={(event) => {\n            setCityTo(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"mb-4\">\n        <label\n          htmlFor=\"dateOfDispatch\"\n          className=\"form-label\"\n        >\n          Choose date of dispatch\n        </label>\n        <input\n          type=\"date\"\n          className=\"form-control\"\n          id=\"dateOfDispatch\"\n          min=\"2022-08-01\"\n          max=\"2022-12-31\"\n          onChange={(event) => {\n            setDateOfDispatch(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"input-group mb-4\">\n        <label\n          className=\"input-group-text\"\n          htmlFor=\"inputGroupSelect01\"\n        >\n          Parcel type\n        </label>\n        <select\n          className=\"form-select\"\n          id=\"inputGroupSelect01\"\n          value={parcelType}\n          onChange={(event) => {\n            setParcelType(event.target.value);\n          }}\n          required\n        >\n          <option value=\"\" disabled>Choose...</option>\n          <option value=\"Gadgets\">Gadgets</option>\n          <option value=\"Drinks\">Drinks</option>\n          <option value=\"Clothes\">Clothes</option>\n          <option value=\"Medicines\">Medicines</option>\n          <option value=\"Other\">Other</option>\n        </select>\n      </div>\n\n      <div className=\"input-group mb-4\">\n        <span className=\"input-group-text\">\n          Parcel description\n        </span>\n        <textarea\n          className=\"form-control\"\n          aria-label=\"With textarea\"\n          value={parcelDescription}\n          onChange={(event) => {\n            setParcelDescription(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-outline-success\"\n        style={{ width: '100%' }}\n      >\n        Apply\n      </button>\n    </form>\n  );\n};\n\nAddDeliveryForm.propTypes = {\n  addDelivery: PropTypes.func,\n};\n\nAddDeliveryForm.defaultProps = {\n  addDelivery: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AddDeliveryForm } from '../AddDeliveryForm/AddDeliveryForm';\n\nexport const ModalAddForm = ({ addDelivery }) => (\n  <>\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-success\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#staticBackdrop\"\n      style={{ width: '80%' }}\n    >\n      ADD NEW DELIVERY\n    </button>\n    <div\n      className=\"modal fade\"\n      id=\"staticBackdrop\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabIndex=\"-1\"\n      aria-labelledby=\"staticBackdropLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5\n              className=\"modal-title\"\n              id=\"staticBackdropLabel\"\n            >\n              New delivery\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            />\n          </div>\n          <div className=\"modal-body\">\n            <AddDeliveryForm addDelivery={addDelivery} />\n          </div>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nModalAddForm.propTypes = {\n  addDelivery: PropTypes.func,\n};\n\nModalAddForm.defaultProps = {\n  addDelivery: () => {},\n};\n","import React from 'react';\nimport './Spinner.scss';\n\nexport const Spinner = () => (\n  <div className=\"loading-container\">\n    <div className=\"spinner\" />\n    <div className=\"spinner-center\" />\n    <div className=\"loading-text\">Loading...</div>\n  </div>\n);\n","import React from 'react';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { DeliveriesList } from '../DeliveriesList/DeliveriesList';\nimport { ModalAddForm } from '../Modal/ModalAddForm';\nimport { Spinner } from '../Spinner/Spinner';\nimport './Container.scss';\n\nexport const Container = () => {\n  const [deliveries, setDelivery] = useLocalStorage([], 'deliveries');\n\n  const addDelivery = (\n    cityFrom,\n    cityTo,\n    parcelType,\n    dateOfDispatch,\n    parcelDescription,\n  ) => {\n    const newDelivery = {\n      id: deliveries.length + 1,\n      cityFrom,\n      cityTo,\n      parcelType,\n      dateOfDispatch,\n      parcelDescription,\n    };\n\n    setDelivery([newDelivery, ...deliveries]);\n  };\n\n  return (\n    <div className=\"Container\">\n      <h2 className=\"Container__title\">\n        My deliveries\n      </h2>\n      <ModalAddForm addDelivery={addDelivery} />\n      {deliveries ? (\n        deliveries.map(delivery => (\n          <DeliveriesList\n            key={delivery.id}\n            delivery={delivery}\n          />\n        ))\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nfunction useLocalStorage(initialValue, key) {\n  const getValue = () => {\n    const storage = localStorage.getItem(key);\n\n    if (storage) {\n      return JSON.parse(storage);\n    }\n\n    return initialValue;\n  };\n\n  const [value, setValue] = useState(getValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value]);\n\n  return [value, setValue];\n}\n\nexport { useLocalStorage };\n","import React from 'react';\nimport './App.scss';\nimport { Container } from './Components/Container/Container';\n\nexport const App = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">\n      Delivery App\n    </h1>\n    <Container />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}